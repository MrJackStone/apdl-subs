! LHELIX , radius , pitch , phi  , loops , angStep , compSuffix
! LHELIX , arg1   , arg2  , arg3 , arg4  , arg5    , arg6

! Description:
! Draws a helix-shaped line in the active CSYS. The helix's axis is parallel to the Z axis and
! starts at Z=0.

! Arguments:
! arg1: radius      -  radius of the helix
! arg2: pitch       -  distance between loops measured along the helix's axial direction
!                      (set to 0 if defining helix geometry based on the PHI angle instead)
! arg3: phi         -  maximum angle of the helical path measured along the helix's axis
!                      (used only if arg2=0)
! arg4: loops       -  number of times the helix turns (can be fracional for incomplete turns)
! arg5: angStep     -  angular increment between consecutive keypoints defining helical lines
!                      (defaults to 90 degrees and can't exceed 180 degrees)
! arg6: compSuffix  -  string used as component's name suffix (COMPx_%arg6%)
!                      (defaults to 'HELIX')

! Local parameters:
! AR22: hPitch
! AR25: thetaStep
! AR26: cmSuffix
! AR31: pitchPhiRatio
! AR32: ki
! AR33: kj
! AR34: theta
! AR35: totalAngle
! AR36: nthZ
! AR37: kmaxd
! AR38: lastZ
! AR39: lineCompName
! AR40: kpCompName


! Check input parameters
AR22=arg2
*if,arg2,eq,0,then
  afunbackup
  *afun,deg
  AR22=2*pi*arg1/tan(arg3)
  afunrestore
*endif

AR25=90
*if,arg5,ne,0,then
  AR25=(arg5<180)
*endif

AR26='HELIX'
*get,AR20,parm,arg6,type
*if,AR20,eq,3,then
  AR26=arg6
*endif
AR39='COMPL_%AR26%'
AR40='COMPK_%AR26%'

! Prepare environment
csbackup
lbackup
kbackup
lsel,none
ksel,none
*del,LHELIX_VAR_cylin

! Activate cylindrical CSYS aligned with helix's axis
csnext,'LHELIX_VAR_cylin'
clocal,LHELIX_VAR_cylin,cylin,0,0,0

! Calculate necessary geometric parameters
AR31=AR22/360
AR35=arg4*360

! Draw helical lines for which the final angle is a multiple of the angular step
AR32=0
*do,AR34,0,AR35,AR25
  AR36=AR34*AR31
  *get,AR37,kp,,num,maxd
  AR33=AR37+1

  ! Draw keypoint on helical line
  k,AR33,arg1,AR34,AR36

  ! Draw helical line
  *if,AR32,ne,0,then
    l,AR32,AR33
  *endif

  ! Update previous keypoint on helical line
  AR32=AR33
*enddo

! Draw last helical line when there is angular remainder
*if,AR34,ne,AR35,then
  AR38=AR35*AR31
  *get,AR37,kp,,num,maxd
  AR33=AR37+1

  ! Draw last keypoint
  k,AR33,arg1,AR35,AR38

  ! Draw last helical segment
  l,AR32,AR33
*endif

! Create selection component with the helix's lines
cm,%AR39%,line
cm,%AR40%,kp

! Clean up
csrestore
lrestore
krestore
cmsel,a,%AR39%
cmsel,a,%AR40%

csdele,LHELIX_VAR_cylin
*del,LHELIX_VAR_cylin
