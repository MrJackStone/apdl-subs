! arrput , arrName , atomCount , atom1 , atom2 , atom3 , atom4 , atom5 , atom6 , atom7 , atom8 , atom9 , atom10
! ARRPUT , ARG1    , ARG2      , ARG3  , ARG4  , ARG5  , ARG6  , ARG7  , ARG8  , ARG9  , AR10  , AR11  , AR12

! Description:
! Appends a defined number of atoms (between 0 and 10) to an existing or new numerical (default) or
! char array.

! Arguments:
! ARG1: arrName            -  name of array to which data will be appended
!                             (defaults to 'ARRPUT_ARR_output')
! ARG2: atomCount          -  number of atoms to append (between 1 and 10)
! ARG3-AR12: atom1-atom10  -  value of each atom to be appended to the array

! Local parameters:
! ar20: parType
! ar21: arrayName
! ar22: arrayType
! ar23: originalDim
! ar24: newDim
! ar25: nthPos
! ar26: nthAtom

! Global cleared parameters:
! ARRPUT_ARR_atoms
! ARRPUT_ARR_temp

! Global output parameters:
! %ARG1% (defaults to ARRPUT_ARR_output)


! Prepare environment
*del , ARRPUT_ARR_output ,  , nopr
*del , ARRPUT_ARR_temp   ,  , nopr
*del , ARRPUT_ARR_atoms  ,  , nopr

! Parse inputs
ar21 = 'ARRPUT_ARR_output'
*get,ar20,parm,ARG1,type
*if,ar20,eq,3,then
  ar21 = ARG1
*endif

! Initialize arrays
*get,ar20,parm,%ar21%,type
*if,ar20,eq,4,then
  ! Char array
  ar22='CHAR'
*else
  ! Default: numerical array
  ar22='ARRAY'
*endif

*dim,ARRPUT_ARR_atoms,%ar22%,10
ARRPUT_ARR_atoms(1) = ARG3 , ARG4 , ARG5 , ARG6 , ARG7 , ARG8 , ARG9 , AR10 , AR11 , AR12

*get,ar23,parm,%ar21%,dim,x
ar24 = ar23+ARG2

*dim,ARRPUT_ARR_temp,%ar22%,ar23

! Recreate array with appended values
*do,ar25,1,ar23,1
  ARRPUT_ARR_temp(ar25) = %ar21%(ar25)
*enddo

*del,%ar21%,,nopr
*dim,%ar21%,%ar22%,ar24

*do,ar25,1,ar23,1
  %ar21%(ar25) = ARRPUT_ARR_temp(ar25)
*enddo

*do,ar26,1,ARG2,1
  %ar21%(ar23+ar26)=ARRPUT_ARR_atoms(ar26)
*enddo

! Clean up
*del , ARRPUT_ARR_temp  ,  , nopr
*del , ARRPUT_ARR_atoms ,  , nopr
