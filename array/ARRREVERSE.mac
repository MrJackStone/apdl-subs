! arrreverse, outparm, arrparm
! ARRREVERSE,    ARG1,    ARG2

! Description:
! Reverses the order of the elements in the provided array.

! Arguments:
! ARG1: outparm  -  name of the parameter to which the reversed array will be written.
!                   Defaults to ARG2 (name of the input parameter itself)
! ARG2: arrparm  -  name of the array parameter to reverse

! Local parameters:
! ar20: parType
! ar21: index
! ar22: reversedIndex
! ar23: arrayElement
! ar30: arrayType
! ar31: arrLength
! ar91: outputParm

! Global parameters (erased at the end of this subroutine):
! ARRREVERSE_ARR_temp

! Output parameters:
! %ARG1% (defaults to %ARG2%)


! Validate arguments
*get,ar20,parm,ARG2,type
*if,ar20,ne,3,then
  *msg,warn
ARRREVERSE error: invalid ARG2 type (expected character scalar).%/&
ARRREVERSE command ignored.
  *return,-1
*endif

*get,ar20,parm,%ARG2%,type
*if,ar20,ne,1,or,ar20,ne,4,then
  *msg,warn
ARRREVERSE error: invalid ARG2 (expected name of array).%/&
ARRREVERSE command ignored.
  *return,-1
*endif

ar30 = 'array'
*if,ar20,eq,4,then
  ar30 = 'char'
*endif

! Set argument defaults
ar91 = ARG2
*get,ar20,parm,ARG1,type
*if,ar20,eq,3,then
  ar91 = ARG1
*endif

! Initialize temporary array to store reversed values
*get,ar31,parm,%ARG2%,dim,x
*del,ARRREVERSE_ARR_temp,,nopr
*dim,ARRREVERSE_ARR_temp,ar30,ar31

! Initialize reverse index counter
ar22 = ar31

! Assign values from provided array to temp array in reversed order
*do,ar21,1,ar31,1
  ar23                      = %ARG2%(ar21)
  ARRREVERSE_ARR_temp(ar22) = ar23
  ar22                      = ar22-1
*enddo

! Assign reversed array to output parameter
*del,%ar91%,,nopr
*vfun,%ar91%,copy,ARRREVERSE_ARR_temp

! Clean up
*del,ARRREVERSE_ARR_temp,,nopr
