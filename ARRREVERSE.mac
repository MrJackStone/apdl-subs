! arrreverse, outparm, arrparm
! arrreverse,    arg1,    arg2

! Description:
! Reverses the order of the elements in the provided array.

! Arguments:
! arg1: outparm  -  name of the parameter to which the reversed array will be written.
!                   Defaults to arg2 (name of the input parameter itself)
! arg2: arrparm  -  name of the array parameter to reverse

! Local parameters:
! AR20: parType
! AR21: index
! AR22: reversedIndex
! AR23: arrayElement
! AR30: arrayType
! AR31: arrLength
! AR91: outputParm

! Global parameters (erased at the end of this subroutine):
! ARRREVERSE_ARR_temp

! Output parameters:
! %arg1% (defaults to %arg2%)


! Validate arguments
*get,AR20,parm,arg2,type
*if,AR20,ne,3,then
  *msg,warn
ARRREVERSE error: invalid arg2 type (expected character scalar).%/&
ARRREVERSE command ignored.
  *return,-1
*endif

*get,AR20,parm,%arg2%,type
*if,AR20,ne,1,or,AR20,ne,4,then
  *msg,warn
ARRREVERSE error: invalid arg2 (expected name of array).%/&
ARRREVERSE command ignored.
  *return,-1
*endif

AR30='array'
*if,AR20,eq,4,then
  AR30='char'
*endif

! Set argument defaults
AR91=arg2
*get,AR20,parm,arg1,type
*if,AR20,eq,3,then
  AR91=arg1
*endif

! Initialize temporary array to store reversed values
*get,AR31,parm,%arg2%,dim,x
*del,ARRREVERSE_ARR_temp,,nopr
*dim,ARRREVERSE_ARR_temp,AR30,AR31

! Initialize reverse index counter
AR22=AR31

! Assign values from provided array to temp array in reversed order
*do,AR21,1,AR31,1
  AR23=%arg2%(AR21)
  ARRREVERSE_ARR_temp(AR22)=AR23
  AR22=AR22-1
*enddo

! Assign reversed array to output parameter
*del,%AR91%,,nopr
*vfun,%AR91%,copy,ARRREVERSE_ARR_temp

! Clean up
*del,ARRREVERSE_ARR_temp,,nopr
