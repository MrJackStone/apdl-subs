! loadtrain, LTname, repetitions, offset, impactCoef, udlLen, mirror
! LOADTRAIN,   ARG1,        ARG2,   ARG3,       ARG4,   ARG5,   ARG6

! Description:
! Creates and populates arrays with load configuration corresponding to the selected load train.

! Arguments:
! ARG1: LTname       -  string identifying the selected load train (case insensitive).
!                       Options:
!                          'NONE'         -  single load with value 0
!                          'COOPER E-80'  -  COOPER E-80 locomotive side view, 18 point loads
!                                            (peak load at +21.45 ±0.75)
!                          'CE-80+20'     -  COOPER E-80 +20% (all loads multiplied by 1.2)
!                                            (peak load at +21.45 ±0.75)
!                          'CE-80_FRONT'  -  COOPER E-80 cross-section view of heaviest axis,
!                                            two loads (gauge = 1 meter)
!                          'TB-360'       -  TB-360 load train locomotive followed/preceded by
!                                            ARG5 meters of railcars (peak load at 0 ±1)
!                          'TB-450'       -  TB-450 load train, single truck with 3 axles
!                                            (peak load at 0)
!                          'DASH9'        -  two DASH9 locomotives followed by ARG5 units of
!                                            GDE railcars
! ARG2: repetitions  -  number of times the selected load train will be repeated when filling
!                       the arrays
! ARG3: offset       -  location offset applied to load position array
! ARG4: impactCoef   -  impact coefficient by which each load train force value will be multiplied
!                       (defaults to 1.0)
! ARG5: udlLen       -  length of uniformly distributed loads (simulated as point loads 1 meter
!                       apart) before and after load train or number of follower railcars
! ARG6: mirror       -  if activated, mirrors the load train, which is equivalent to redefining the
!                       position as: POS = -POS. This operation is performed before an offset
!                       (ARG3) is applied.
!                          [0] - Do not mirror (default)
!                          [1] - Mirror loads

! Local parameters:
! ar20: upcaseLTName
! ar21: parType
! ar22: LTrep
! ar23: refCount
! ar24: ltDist
! ar25: initialPosition
! ar26: nthLT
! ar27: idx
! ar28: nthPoint
! ar29: load
! ar30: position
! ar31: impactMultiplier
! ar32: udlPointLoadCount
! ar33: aheadLoc
! ar34: behindLoc
! ar35: aheadIdx
! ar36: behindIdx
! ar37: udlRailcars
! ar38: rcCounter
! ar39: mirrorMultiplier
! ar40: locomotiveRailcarDist
! ar41: railcarDistance
! ar42: nthRailcar
! ar43: axlesPerRailcar
! ar44: nthAxle
! ar50: randomNumFnameSuffix
! ar51: recordFileName

! Output parameters:
! LOADTRAIN_VAR_count
! LOADTRAIN_VAR_length
! LOADTRAIN_ARR_positions
! LOADTRAIN_ARR_loads

! Global parameters (erased at the end of this subroutine):
! LOADTRAIN_ARR_refPositions
! LOADTRAIN_ARR_refLoads
! LOADTRAIN_ARR_locomotive_pos
! LOADTRAIN_ARR_locomotive_for
! LOADTRAIN_ARR_railcar_pos
! LOADTRAIN_ARR_railcar_for
! LOADTRAIN_ARR_indices


! Load train name (case-insensitive)
ar20=UPCASE(ARG1)

! Impact multiplier
*get,ar21,PARM,ARG4,TYPE
*if,ar21,NE,0,OR,ARG4,EQ,0,THEN
  ar31=1
*else
  ar31=ARG4
*endif

! Load train/Locomotive repetitions
*get,ar21,PARM,ARG2,TYPE
*if,ar21,NE,0,OR,ARG2,LE,1,THEN
  ar22=1
*else
  ar22=ARG2
*endif

! Option: mirror loads
ar39=1
*if,ARG6,eq,1,then
  ar39=-1
*endif

! Number of uniformly distributed point loads or following railcars
ar32=0
*get,ar21,parm,ARG5,type
*if,ar21,eq,0,then
  ar32=nint(abs(ARG5))
*endif

*del , LOADTRAIN_ARR_positions    ,  , nopr
*del , LOADTRAIN_ARR_loads        ,  , nopr
*del , LOADTRAIN_ARR_refPositions ,  , nopr
*del , LOADTRAIN_ARR_refLoads     ,  , nopr


*if,ar20,EQ,'COOPER E-80',THEN
  ! Reference COOPER E-80 single configuration
  ar23=18
  *dim,LOADTRAIN_ARR_refPositions,ARRAY,ar23
  *dim,LOADTRAIN_ARR_refLoads,ARRAY,ar23
  LOADTRAIN_ARR_refPositions(1)  =    0,  2.4,  3.9,  5.4,  6.9,  9.6, 11.1, 12.9, 14.4, 16.8
  LOADTRAIN_ARR_refPositions(11) = 19.2, 20.7, 22.2, 23.7, 26.4, 27.9, 29.7, 31.2
  LOADTRAIN_ARR_refLoads(1)  = 181e3, 362e3, 362e3, 362e3, 362e3, 235e3, 235e3, 235e3, 235e3, 181e3
  LOADTRAIN_ARR_refLoads(11) = 362e3, 362e3, 362e3, 362e3, 235e3, 235e3, 235e3, 235e3

  ! Railway car uniformly distributed linear load value
  ar37=120e3

  ! Distance between load trains
  ar24=2.4

  ! COOPER E-80 repeated N times
  LOADTRAIN_VAR_count=ar23*ar22+ar32
  *dim,LOADTRAIN_ARR_positions,ARRAY,LOADTRAIN_VAR_count
  *dim,LOADTRAIN_ARR_loads,ARRAY,LOADTRAIN_VAR_count
  ar25=ARG3
  *do,ar26,1,ar22,1
    ar27=1+ar23*(ar26-1)
    *do,ar28,1,ar23,1
      ar29=LOADTRAIN_ARR_refLoads(ar28)*ar31
      ar30=LOADTRAIN_ARR_refPositions(ar28)
      LOADTRAIN_ARR_loads(ar27+ar28-1)=ar29
      LOADTRAIN_ARR_positions(ar27+ar28-1)=ar25+ar30
    *enddo
    ar25=ar25+ar30+ar24
  *enddo

  ar38=0
  *if,ar32,gt,0,then
    *do,ar28,ar23*ar22+1,LOADTRAIN_VAR_count,1
      LOADTRAIN_ARR_positions(ar28)=ar25-ar38
      LOADTRAIN_ARR_loads(ar28)=ar37*ar31
      ar38=ar38-1
    *enddo
  *endif

*elseif,ar20,EQ,'CE-80+20',THEN
  ! Reference COOPER E-80 +20% single configuration
  ar23=18
  *dim,LOADTRAIN_ARR_refPositions,ARRAY,ar23
  *dim,LOADTRAIN_ARR_refLoads,ARRAY,ar23
  LOADTRAIN_ARR_refPositions(1)  =    0,  2.4,  3.9,  5.4,  6.9,  9.6, 11.1, 12.9, 14.4, 16.8
  LOADTRAIN_ARR_refPositions(11) = 19.2, 20.7, 22.2, 23.7, 26.4, 27.9, 29.7, 31.2
  LOADTRAIN_ARR_refLoads(1)  = 181e3, 362e3, 362e3, 362e3, 362e3, 235e3, 235e3, 235e3, 235e3, 181e3
  LOADTRAIN_ARR_refLoads(11) = 362e3, 362e3, 362e3, 362e3, 235e3, 235e3, 235e3, 235e3

  ! Railway car uniformly distributed linear load value
  ar37=120e3

  ! Distance between load trains
  ar24=2.4

  ! COOPER E-80 repeated N times
  LOADTRAIN_VAR_count=ar23*ar22+ar32
  *dim,LOADTRAIN_ARR_positions,ARRAY,LOADTRAIN_VAR_count
  *dim,LOADTRAIN_ARR_loads,ARRAY,LOADTRAIN_VAR_count
  ar25=ARG3
  *do,ar26,1,ar22,1
    ar27=1+ar23*(ar26-1)
    *do,ar28,1,ar23,1
      ar29=LOADTRAIN_ARR_refLoads(ar28)*ar31*1.2
      ar30=LOADTRAIN_ARR_refPositions(ar28)
      LOADTRAIN_ARR_loads(ar27+ar28-1)=ar29
      LOADTRAIN_ARR_positions(ar27+ar28-1)=ar25+ar30
    *enddo
    ar25=ar25+ar30+ar24
  *enddo

  ar38=0
  *if,ar32,gt,0,then
    *do,ar28,ar23*ar22+1,LOADTRAIN_VAR_count,1
      LOADTRAIN_ARR_positions(ar28)=ar25-ar38
      LOADTRAIN_ARR_loads(ar28)=ar37*ar31
      ar38=ar38-1
    *enddo
  *endif

*elseif,ar20,eq,'DASH9',then
  ! Reference DASH9 + GDE railcar configuration:

  ! Locomotive
  ar23=8
  *del , LOADTRAIN_ARR_locomotive_pos ,       , nopr
  *del , LOADTRAIN_ARR_locomotive_for ,       , nopr
  *dim , LOADTRAIN_ARR_locomotive_pos , array , ar23
  *dim , LOADTRAIN_ARR_locomotive_for , array , ar23
  LOADTRAIN_ARR_locomotive_pos(1) =     0 , 2.08  , 3.47  , 5.55  , 12.61 , 14.69 , 16.08 , 18.16
  LOADTRAIN_ARR_locomotive_for(1) = 229e3 , 229e3 , 229e3 , 229e3 , 229e3 , 229e3 , 229e3 , 229e3

  ! Railway car
  ar43=4
  *del , LOADTRAIN_ARR_railcar_pos ,       , nopr
  *del , LOADTRAIN_ARR_railcar_for ,       , nopr
  *dim , LOADTRAIN_ARR_railcar_pos , array , ar43
  *dim , LOADTRAIN_ARR_railcar_for , array , ar43
  LOADTRAIN_ARR_railcar_pos(1) =     0 , 1.73  , 5.50  , 7.23
  LOADTRAIN_ARR_railcar_for(1) = 300e3 , 300e3 , 300e3 , 300e3

  ! Distance between locomotives
  ar24=4.91

  ! Distance between locomotive and railcar
  ar40=3.72

  ! Distance between railcars
  ar41=2.52

  ! Calculate total number of loads
  LOADTRAIN_VAR_count=(ar23*ar22)+(ar43*ar32)
  *dim , LOADTRAIN_ARR_positions , ARRAY , LOADTRAIN_VAR_count
  *dim , LOADTRAIN_ARR_loads     , ARRAY , LOADTRAIN_VAR_count

  ! Locomotive loads & positions
  ar27=0
  ar25=ARG3
  *do,ar26,1,ar22,1
    *do,ar28,1,ar23,1
      ar27                          = ar27+1
      ar29                          = LOADTRAIN_ARR_locomotive_for(ar28)
      ar30                          = LOADTRAIN_ARR_locomotive_pos(ar28)
      LOADTRAIN_ARR_loads(ar27)     = ar29*ar31
      LOADTRAIN_ARR_positions(ar27) = ar25+ar30
    *enddo
    ar25=ar25+ar30+ar24
  *enddo

  ! Railway car loads & positions
  ar25=ar25-ar24+ar40
  *do,ar42,1,ar32,1
    *do,ar44,1,ar43,1
      ar27                          = ar27+1
      ar29                          = LOADTRAIN_ARR_railcar_for(ar44)
      ar30                          = LOADTRAIN_ARR_railcar_pos(ar44)
      LOADTRAIN_ARR_loads(ar27)     = ar29*ar31
      LOADTRAIN_ARR_positions(ar27) = ar25+ar30
    *enddo
    ar25=ar25+ar30+ar41
  *enddo

*elseif,ar20,EQ,'TB-32',THEN
  ! Reference TB-32 single configuration
  ar23=18
  *dim,LOADTRAIN_ARR_refPositions,ARRAY,ar23
  *dim,LOADTRAIN_ARR_refLoads,ARRAY,ar23
  LOADTRAIN_ARR_refPositions(1)  =    0,  2.4,  3.9,  5.4,  6.9,  9.6, 11.1, 12.9, 14.4, 16.8
  LOADTRAIN_ARR_refPositions(11) = 19.2, 20.7, 22.2, 23.7, 26.4, 27.9, 29.7, 31.2
  LOADTRAIN_ARR_refLoads(1)  = 160e3, 320e3, 320e3, 320e3, 320e3, 210e3, 210e3, 210e3, 210e3, 160e3
  LOADTRAIN_ARR_refLoads(11) = 320e3, 320e3, 320e3, 320e3, 210e3, 210e3, 210e3, 210e3

  ! Railway car uniformly distributed linear load value
  ar37=100e3

  ! Distance between load trains
  ar24=1.5

  ! Number of point loads representing following railway cars
  *get,ar21,parm,ARG5,type
  *if,ar21,ne,0,then
    ar32=0
  *elseif,ARG5,gt,0,then
    ar32=nint(ARG5)
  *else
    ar32=0
  *endif

  ! TB-32 repeated N times
  LOADTRAIN_VAR_count=ar23*ar22+ar32
  *dim,LOADTRAIN_ARR_positions,ARRAY,LOADTRAIN_VAR_count
  *dim,LOADTRAIN_ARR_loads,ARRAY,LOADTRAIN_VAR_count
  ar25=ARG3
  *do,ar26,1,ar22,1
    ar27=1+ar23*(ar26-1)
    *do,ar28,1,ar23,1
      ar29=LOADTRAIN_ARR_refLoads(ar28)*ar31
      ar30=LOADTRAIN_ARR_refPositions(ar28)
      LOADTRAIN_ARR_loads(ar27+ar28-1)=ar29
      LOADTRAIN_ARR_positions(ar27+ar28-1)=ar25+ar30
    *enddo
    ar25=ar25+ar30+ar24
  *enddo

  ar38=0
  *if,ar32,gt,0,then
    *do,ar28,ar23*ar22+1,LOADTRAIN_VAR_count,1
      LOADTRAIN_ARR_positions(ar28)=ar25-ar38
      LOADTRAIN_ARR_loads(ar28)=ar37*ar31
      ar38=ar38-1
    *enddo
  *endif


*elseif,ar20,EQ,'CE-80_FRONT',THEN
  ! Reference COOPER E-80 single configuration
  ar23=2
  *dim,LOADTRAIN_ARR_refPositions,ARRAY,ar23
  *dim,LOADTRAIN_ARR_refLoads,ARRAY,ar23
  LOADTRAIN_ARR_refPositions(1)  =    0,  1
  LOADTRAIN_ARR_refLoads(1)  = 181e3, 181e3
  ! Distance between load trains
  ar24=4
  ! COOPER E-80 repeated N times
  LOADTRAIN_VAR_count=ar23*ar22
  *dim,LOADTRAIN_ARR_positions,ARRAY,LOADTRAIN_VAR_count
  *dim,LOADTRAIN_ARR_loads,ARRAY,LOADTRAIN_VAR_count
  ar25=ARG3
  *do,ar26,1,ar22,1
    ar27=1+ar23*(ar26-1)
    *do,ar28,1,ar23,1
      ar29=LOADTRAIN_ARR_refLoads(ar28)*ar31
      ar30=LOADTRAIN_ARR_refPositions(ar28)
      LOADTRAIN_ARR_loads(ar27+ar28-1)=ar29
      LOADTRAIN_ARR_positions(ar27+ar28-1)=ar25+ar30
    *enddo
    ar25=ar25+ar30+ar24
  *enddo


*elseif,ar20,EQ,'TB-360',THEN
  ! Number of point loads on either side of the locomotive
  ar32=NINT(ARG5)

  ! TB-360 locomotive loads
  LOADTRAIN_VAR_count=4+2*ar32
  *dim,LOADTRAIN_ARR_positions,ARRAY,LOADTRAIN_VAR_count
  *dim,LOADTRAIN_ARR_loads,ARRAY,LOADTRAIN_VAR_count
  LOADTRAIN_ARR_positions(1) =    -3+ARG3,    -1+ARG3,     1+ARG3,     3+ARG3
  LOADTRAIN_ARR_loads(1)     = 360e3*ar31, 360e3*ar31, 360e3*ar31, 360e3*ar31
  ! Railway car loads
  ar33=3
  ar34=-3
  *do,ar27,1,ar32,1
    ar33=ar33+1
    ar34=ar34-1
    ar35=4+(2*ar27-1)
    ar36=4+(2*ar27)
    LOADTRAIN_ARR_positions(ar35)  = ar33+ARG3
    LOADTRAIN_ARR_loads(ar35)      = 120e3*ar31
    LOADTRAIN_ARR_positions(ar36)  = ar34+ARG3
    LOADTRAIN_ARR_loads(ar36)      = 120e3*ar31
  *enddo


*elseif,ar20,EQ,'TB-450',THEN
  ! Highway truck TB-450, single configuration
  ar23=3
  *dim,LOADTRAIN_ARR_positions,ARRAY,ar23
  *dim,LOADTRAIN_ARR_loads,ARRAY,ar23
  LOADTRAIN_ARR_positions(1)  =  -1.5+ARG3,     0+ARG3,   1.5+ARG3
  LOADTRAIN_ARR_loads(1)      = 150e3*ar31, 150e3*ar31, 150e3*ar31
  LOADTRAIN_VAR_count=ar23


*elseif,ar20,EQ,'ER-8000',THEN
  ! ER-8000 (empilhadora/recuperadora 8000 ton) single configuration
  ar23=13
  *dim,LOADTRAIN_ARR_refPositions,ARRAY,ar23
  *dim,LOADTRAIN_ARR_refLoads,ARRAY,ar23
  LOADTRAIN_ARR_refPositions(1)  =  0.00,  1.00,  2.10,  3.10,  4.80,  5.80,  6.90,  7.90, 16.64, 17.69
  LOADTRAIN_ARR_refPositions(11) = 18.69, 20.25, 21.25
  LOADTRAIN_ARR_refLoads(1)  =     800e3, 800e3, 800e3, 800e3, 800e3, 800e3, 800e3, 800e3, 720e3, 720e3
  LOADTRAIN_ARR_refLoads(11) =     720e3, 720e3, 720e3

  ar22=1 ! Always a single configuration

  ! ER-8000 without repetitions
  LOADTRAIN_VAR_count=ar23*ar22
  *dim,LOADTRAIN_ARR_positions,ARRAY,LOADTRAIN_VAR_count
  *dim,LOADTRAIN_ARR_loads,ARRAY,LOADTRAIN_VAR_count
  ar25=ARG3
  *do,ar26,1,ar22,1
    ar27=1+ar23*(ar26-1)
    *do,ar28,1,ar23,1
      ar29=LOADTRAIN_ARR_refLoads(ar28)*ar31
      ar30=LOADTRAIN_ARR_refPositions(ar28)
      LOADTRAIN_ARR_loads(ar27+ar28-1)=ar29
      LOADTRAIN_ARR_positions(ar27+ar28-1)=ar25+ar30
    *enddo
    ar25=ar25+ar30+ar24
  *enddo


*elseif,ar20,EQ,'NONE',THEN
  ! No load
  *del,LOADTRAIN_ARR_positions,,nopr
  *del,LOADTRAIN_ARR_loads,,nopr
  *dim,LOADTRAIN_ARR_positions,ARRAY,1
  *dim,LOADTRAIN_ARR_loads,ARRAY,1
  LOADTRAIN_ARR_positions(1)=0
  LOADTRAIN_ARR_loads(1)=0

*endif

! Mirror load positions, if requested
*voper,LOADTRAIN_ARR_positions,LOADTRAIN_ARR_positions,mult,ar39

LOADTRAIN_VAR_length=abs(LOADTRAIN_ARR_positions(1)-LOADTRAIN_ARR_positions(LOADTRAIN_VAR_count))

! Write load train configuration to file
ctime,'LOADTRAIN_VAR_suffix',,'_'
ar50=nint(rand(100,999))
ar51='~LOADTRAIN_LOG_%LOADTRAIN_VAR_suffix%_%ar50%'
*del,LOADTRAIN_ARR_indices,,nopr,,nopr
*dim,LOADTRAIN_ARR_indices,,LOADTRAIN_VAR_count
*vfill,LOADTRAIN_ARR_indices,ramp,1,1

*cfopen,%ar51%,'txt'
  *vwrite,
  ('LOADTRAIN record: generated load configuration')

  *vwrite,
  (' ')

  *vwrite,ar20
Load train name: %S
  *vwrite,ar22
Repetitions:     %I
  *vwrite,ARG3
Initial offset:  %F
  *vwrite,ar31
Impact coef.:    %F
  *vwrite,ar32
Following loads: %I
  *if,ar39,eq,1,then
    *vwrite,
Mirror loads:    NO
  *elseif,ar39,eq,-1,then
    *vwrite,
Mirror loads:    YES
  *else
    *vwrite,
Mirror loads:    ???
  *endif

  *vwrite,
  (' ')

  *vwrite,LOADTRAIN_VAR_count
Number of loads: %I
  *vwrite,LOADTRAIN_VAR_length
Load train len.: %F

  *vwrite,
  (' ')

  *vwrite,
  ('Index |            Positions  |                Forces')
  *vwrite,LOADTRAIN_ARR_indices(1),LOADTRAIN_ARR_positions(1),LOADTRAIN_ARR_loads(1)
  (F6.0,TL1,' | ',F20.8,'  |  ',F20.8)
*cfclos

*del , LOADTRAIN_ARR_refPositions   ,  , nopr
*del , LOADTRAIN_ARR_refLoads       ,  , nopr
*del , LOADTRAIN_ARR_locomotive_pos ,  , nopr
*del , LOADTRAIN_ARR_locomotive_for ,  , nopr
*del , LOADTRAIN_ARR_railcar_pos    ,  , nopr
*del , LOADTRAIN_ARR_railcar_for    ,  , nopr
*del , LOADTRAIN_ARR_indices        ,  , nopr
