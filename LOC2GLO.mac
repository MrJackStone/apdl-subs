! LOC2GLO, localX, localY, localZ,   CS, globalX, globalY, globalZ
! LOC2GLO,   arg1,   arg2,   arg3, arg4,    arg5,    arg6,    arg7

! Description:
! Transforms coordinates given in local coordinate system to equivalent ones in global cartesian
! coordinate system (CSYS,0)

! Arguments:
! arg1: localX   -  value of X coordinate in local CS
! arg2: localY   -  value of Y coordinate in local CS
! arg3: localZ   -  value of Z coordinate in local CS
! arg4: localCS  -  number identifying local CS
! arg5: globalX  -  parameter (STR) to which global X coordinate will be assigned
! arg6: globalY  -  parameter (STR) to which global Y coordinate will be assigned
! arg7: globalZ  -  parameter (STR) to which global Z coordinate will be assigned

! Local parameters:
! AR20: parType

! Output parameters:
! LOC2GLO_ARR_local
! LOC2GLO_ARR_global
! LOC2GLO_VAR_x (also %arg5%, when arg5 is STRING)
! LOC2GLO_VAR_y (also %arg6%, when arg6 is STRING)
! LOC2GLO_VAR_z (also %arg7%, when arg7 is STRING)

*del,LOC2GLO_ARR_local
*dim,LOC2GLO_ARR_local,,1,3
LOC2GLO_ARR_local(1,1)=arg1
LOC2GLO_ARR_local(1,2)=arg2
LOC2GLO_ARR_local(1,3)=arg3

*del,LOC2GLO_ARR_global
*dim,LOC2GLO_ARR_global,,1,3

*vfun,LOC2GLO_ARR_global(1,1),global,LOC2GLO_ARR_local(1,1),arg4

LOC2GLO_VAR_x=LOC2GLO_ARR_global(1,1)
LOC2GLO_VAR_y=LOC2GLO_ARR_global(1,2)
LOC2GLO_VAR_z=LOC2GLO_ARR_global(1,3)

*get,AR20,parm,arg5,type
*if,AR20,eq,3,then
    %arg5%=LOC2GLO_VAR_x
*endif

*get,AR20,parm,arg6,type
*if,AR20,eq,3,then
    %arg6%=LOC2GLO_VAR_y
*endif

*get,AR20,parm,arg7,type
*if,AR20,eq,3,then
    %arg7%=LOC2GLO_VAR_z
*endif

