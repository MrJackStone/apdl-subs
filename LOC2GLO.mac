! loc2glo , localX , localY , localZ , CS   , globalX , globalY , globalZ
! LOC2GLO , ARG1   , ARG2   , ARG3   , ARG4 , ARG5    , ARG6    , ARG7

! Description:
! Transforms coordinates given in local coordinate system to equivalent ones in global cartesian
! coordinate system (CSYS,0)

! Arguments:
! ARG1: localX   -  value of X coordinate in local CS
! ARG2: localY   -  value of Y coordinate in local CS
! ARG3: localZ   -  value of Z coordinate in local CS
! ARG4: localCS  -  number identifying local CS
! ARG5: globalX  -  parameter (STR) to which global X coordinate will be assigned
! ARG6: globalY  -  parameter (STR) to which global Y coordinate will be assigned
! ARG7: globalZ  -  parameter (STR) to which global Z coordinate will be assigned

! Local parameters:
! ar20: parType
! ar25: xOutputParm
! ar26: yOutputParm
! ar27: zOutputParm

! Output parameters:
! LOC2GLO_ARR_local
! LOC2GLO_ARR_global
! %ARG5% (defaults to GLO2LOC_VAR_x)
! %ARG6% (defaults to GLO2LOC_VAR_y)
! %ARG7% (defaults to GLO2LOC_VAR_z)


! Parse inputs
ar25 = 'LOC2GLO_VAR_x'
*get,ar20,parm,ARG5,type
*if,ar20,eq,3,then
  ar25 = ARG5
*endif

ar26 = 'LOC2GLO_VAR_y'
*get,ar20,parm,ARG6,type
*if,ar20,eq,3,then
  ar26 = ARG6
*endif

ar27 = 'LOC2GLO_VAR_z'
*get,ar20,parm,ARG7,type
*if,ar20,eq,3,then
  ar27 = ARG7
*endif

! Initialize array with local coordinates
*del , LOC2GLO_ARR_local  ,  , nopr
*del , LOC2GLO_ARR_global ,  , nopr
*dim , LOC2GLO_ARR_local  ,  , 1    , 3
*dim , LOC2GLO_ARR_global ,  , 1    , 3

LOC2GLO_ARR_local(1,1) = ARG1
LOC2GLO_ARR_local(1,2) = ARG2
LOC2GLO_ARR_local(1,3) = ARG3

! Translate to global CS
*vfun,LOC2GLO_ARR_global(1,1),global,LOC2GLO_ARR_local(1,1),ARG4

! Assign output params
%ar25% = LOC2GLO_ARR_global(1,1)
%ar26% = LOC2GLO_ARR_global(1,2)
%ar27% = LOC2GLO_ARR_global(1,3)
