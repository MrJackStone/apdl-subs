! cmpadd , cmName , entType
! CMPADD , ARG1   , ARG2

! Description:
! Adds current selection to existing named selection component. A component's type is obtained from
! the provided component when it exists, extracted directly from ARG2 when it is provided, and,
! when both these methods fail, inferred based on the 5 first characters in the component's name
! ('COMPE' for elements, 'COMPL' for lines, etc.).

! Arguments:
! ARG1: cmName   -  component name (string)
! ARG2: entType  -  entity type (string), used only if component is undefined.
!                   Options: 'NODE', 'ELEM', 'KP', 'LINE', 'AREA', 'VOLU'

! Local parameters:
! ar20: cmType
! ar21: cmKey
! ar22: parmType
! ar23: prefix

! Global erased parameters:
! CMPADD_COMP_temp


! Get selection component type
*get,ar20,comp,%ARG1%,type

! When component is already defined:
*if,ar20,eq,1,then
  ar21 = 'NODE'
*elseif,ar20,eq,2,then
  ar21 = 'ELEM'
*elseif,ar20,eq,6,then
  ar21 = 'KP'
*elseif,ar20,eq,7,then
  ar21 = 'LINE'
*elseif,ar20,eq,8,then
  ar21 = 'AREA'
*elseif,ar20,eq,9,then
  ar21 = 'VOLU'

*elseif,ar20,eq,0,then
  ! When component is undefined:
  *get,ar22,parm,ARG2,type

  *if,ar22,eq,3,then
    ! Type of component directly provided
    ar21 = ARG2

  *else
    ! Type of component inferred based on component name
    ar23 = upcase(strsub(ARG1,1,5))
    *if,ar23,eq,'COMPN',then
      ar21 = 'NODE'
    *elseif,ar23,eq,'COMPE',then
      ar21 = 'ELEM'
    *elseif,ar23,eq,'COMPK',then
      ar21 = 'KP'
    *elseif,ar23,eq,'COMPL',then
      ar21 = 'LINE'
    *elseif,ar23,eq,'COMPA',then
      ar21 = 'AREA'
    *elseif,ar23,eq,'COMPV',then
      ar21 = 'VOLU'
    *else
      ar21 = 'ERROR'
    *endif
  *endif
*endif

! Add to selection component
*if,ar20,ne,0,then
  ! When component exists
  cm,CMPADD_COMP_temp,ar21
  cmsel,a,%ARG1%
  cm,%ARG1%,ar21

  ! Restore previous selection
  cmsel,s,CMPADD_COMP_temp
  cmdele,CMPADD_COMP_temp
  *del,CMPADD_COMP_temp,,nopr

*else
  ! When component does not exist
  cm,%ARG1%,ar21

*endif
