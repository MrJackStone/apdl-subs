! apportionedstats, stats, areas, nodePool, elemPool
! APPORTIONEDSTATS,  ARG1,  ARG2,     ARG3,     ARG4

! Description:
! Calculates apportioned area of every selected node (target nodes) and returns:
!    - statistical summary information in the form of an array of values;
!    - apportioned areas and node numbers for every target node.
! The statistical summary array has the following format:
!    POS  VALUE
!    (1)  minimum
!    (2)  maximum
!    (3)  sum
!    (4)  mean
!    (5)  median
!    (6)  variance
!    (7)  standard deviation
!    (8)  root-mean-square
! The apportioned areas are returned in a Nx2 array, in which N is the number of target nodes.
! Column 1 contains node numbers (of target nodes) and column 2 has the corresponding apportioned
! areas.

! Arguments:
! ARG1: stats     -  name of array parameter to which statistical summary data will be written
!                    (defaults to APPORTIONEDSTATS_ARR_stats)
! ARG2: areas     -  name of array parameter to which apportioned areas calculated for every node
!                    will be written (defaults to APPORTIONEDSTATS_ARR_areas)
! ARG3: nodePool  -  name of node selection component that contains nodes which will be selected
!                    to calculate apportioned area of target nodes (defaults to ALL)
! ARG4: elemPool  -  name of element selection component that contains elements which will be
!                    selected to calculate apportioned area of target nodes (defaults to ALL)

! Local parameters:
! ar20: parType
! ar21: statsArrayName
! ar22: areasArrayName
! ar25: targetNodeCount
! ar33: COMPN_pool
! ar34: COMPE_pool
! ar35: targetNodeIndex
! ar91: minApportioned
! ar92: maxApportioned
! ar93: sumApportioned
! ar94: meanApportioned
! ar95: mediApportioned
! ar96: variApportioned
! ar97: stdvApportioned
! ar98: rmsApportioned


! Parse inputs
ar21 = 'APPORTIONEDSTATS_ARR_stats'
*get,ar20,parm,ARG1,type
*if,ar20,eq,3,then
  ar21 = ARG1
*endif

ar22 = 'APPORTIONEDSTATS_ARR_areas'
*get,ar20,parm,ARG2,type
*if,ar20,eq,3,then
  ar22 = ARG2
*endif

! Prepare environment
nbackup
ebackup

! Initialize output arrays
*get,ar25,node,,count

*del , %ar21% ,  , nopr
*del , %ar22% ,  , nopr
*dim , %ar21% ,  , 8
*dim , %ar22% ,  , ar25 , 2

*vget,%ar22%(1,1),node,,nlist

! Set node pool selection component
nsel,all
*get,ar20,parm,ARG3,type
*if,ar20,eq,3,then
  cmsel,s,%ARG3%
*endif
cm,ar33,node

! Set element pool selection component
esel,all
*get,ar20,parm,ARG3,type
*if,ar20,eq,3,then
  cmsel,s,%ARG3%
*endif
cm,ar34,elem

! Calculate apportioned areas for target nodes
cmsel,s,ar33
cmsel,s,ar34
*do,ar35,1,ar25,1
  %ar22%(ar35,2) = arnode(%ar22%(ar35,1))
*enddo

! Calculate statistical summary data
*vscfun , ar91 , min  , %ar22%(1,2)
*vscfun , ar92 , max  , %ar22%(1,2)
*vscfun , ar93 , sum  , %ar22%(1,2)
*vscfun , ar94 , mean , %ar22%(1,2)
*vscfun , ar95 , medi , %ar22%(1,2)
*vscfun , ar96 , vari , %ar22%(1,2)
*vscfun , ar97 , stdv , %ar22%(1,2)
*vscfun , ar98 , rms  , %ar22%(1,2)

%ar21%(1) = ar91 , ar92 , ar93 , ar94 , ar95 , ar96 , ar97 , ar98

! Clean up
nrestore
elrestore
