! BHELIX , rad1 , rad2 , w1   , w2   , pitch , phi  , loops , angStep , cmSuffix
! BHELIX , ARG1 , ARG2 , ARG3 , ARG4 , ARG5  , ARG6 , ARG7  , ARG8    , ARG9

! Description:
! Draws a helical blade. The helix's axis is parallel to the active CSYS's Z direction and starts
! at Z=0. Blade areas are approximately perpendicular to the axis of the helix.

! Arguments:
! ARG1: rad1      -  inner radius at the beginning of the helix
! ARG2: rad2      -  inner radius at the end of the helix
! ARG3: w1        -  blade width at the beginning of the helix
! ARG4: w2        -  blade width at the end of the helix
! ARG5: pitch     -  distance between loops along axial direction
!                    (set to 0 if defining helix geometry based on PHI instead)
! ARG6: phi       -  maximum angle of the helical path measured along the helix's axis
!                    (used only if ARG5=0)
! ARG7: loops     -  number of times the helix turns (can be fractional)
! ARG8: angStep   -  angular increment between consecutive keypoints along the helical lines
!                    (defaults to 90 degrees and can't exceed 180 degrees)
! ARG9: cmSuffix  -  string used as component's name suffix (COMPx_%ARG9%)
!                    (defaults to 'HELIX')

! Local parameters:
! ar20: parType
! ar21: zmax
! ar22: zmin
! ar23: height
! ar24: deltaWidth
! ar25: lc
! ar26: lnum
! ar27: nthLine
! ar29: cmSuffix
! ar31: innerHelixLcmName
! ar32: innerHelixKcmName
! ar33: innerHelixAcmName
! ar41: k1
! ar42: k2
! ar43: x1coord
! ar44: y1coord
! ar45: z1coord
! ar46: x2coord
! ar47: y2coord
! ar48: z2coord
! ar51: deltaW1
! ar52: deltaW2
! ar53: kA
! ar54: kB
! ar55: kmax


! Prepare environment
mpopbackup
csbackup
abackup
lbackup
kbackup
asel,none
lsel,none
ksel,none
/uis,msgpop,4
*del , BHELIX_VAR_radius  ,  , nopr
*del , BHELIX_VAR_pitch   ,  , nopr
*del , BHELIX_VAR_loops   ,  , nopr
*del , BHELIX_VAR_phi     ,  , nopr
*del , BHELIX_VAR_angstep ,  , nopr
*del , BHELIX_VAR_cmsuf   ,  , nopr
*del , BHELIX_VAR_cylin   ,  , nopr

! Check input parameters
ar29='HELIX'
*get,ar20,parm,ARG9,type
*if,ar20,eq,3,then
  ar29=ARG9
*endif

BHELIX_VAR_radius  = ARG1
BHELIX_VAR_pitch   = ARG5
BHELIX_VAR_phi     = ARG6
BHELIX_VAR_loops   = ARG7
BHELIX_VAR_angstep = ARG8

ar31 = 'COMPL_%ar29%'
ar32 = 'COMPK_%ar29%'
ar33 = 'COMPA_%ar29%'

! Draw inner helical lines
lhelix,BHELIX_VAR_radius,BHELIX_VAR_pitch,BHELIX_VAR_phi,BHELIX_VAR_loops,BHELIX_VAR_angstep,ar29

! Calculate necessary geometric parameters
cmsel,s,%ar32%
*get,ar21,kp,,mxloc,z
*get,ar22,kp,,mnloc,z
ar23 = ar21-ar22
ar24 = ARG3-ARG4

! Activate cylindrical CSYS aligned with helix's axis
csnext,'BHELIX_VAR_cylin'
clocal,BHELIX_VAR_cylin,cylin,0,0,0

! Draw blade areas
asel,none
cm,%ar33%,area

cmsel,s,%ar31%
*get,ar25,line,,count
ar26=0

*do,ar27,1,ar25,1
  cmsel,s,%ar31%
  ar26=lsnext(ar26)

  *get,ar41,line,ar26,kp,1
  *get,ar42,line,ar26,kp,2

  ! Get position of first keypoint
  ar43 = kx(ar41)
  ar44 = ky(ar41)
  ar45 = kz(ar41)
  ar51 = ARG4+ar24*(ar45/ar23)

  ! Get position of second keypoint
  ar46 = kx(ar42)
  ar47 = ky(ar42)
  ar48 = kz(ar42)
  ar52 = ARG4+ar24*(ar48/ar23)

  ! Draw offset keypoints
  *get,ar55,kp,,num,maxd
  ar53 = ar55+1
  ar54 = ar55+2

  k,ar53,ar43+ar51,ar44,ar45
  k,ar54,ar46+ar52,ar47,ar48

  ! Draw remaining blade lines and blade area
  cmsel,s,%ar33%
  ksel,s,kp,,ar41
  ksel,a,kp,,ar42
  ksel,a,kp,,ar53
  ksel,a,kp,,ar54
  lslk,s,1
  l,ar41,ar53
  l,ar53,ar54
  l,ar54,ar42
  al,all

  ! Update blade area component
  cm,%ar33%,area
*enddo

! Merge blade solid model
cmsel,s,%ar32%
nummrg,kp

! Clean up
mpoprestore
csrestore
krestore
lrestore
arestore
cmsel,a,%ar31%
cmsel,a,%ar32%
cmsel,a,%ar33%

csdele,BHELIX_VAR_cylin

*del , BHELIX_VAR_cylin   ,  , nopr
*del , BHELIX_VAR_radius  ,  , nopr
*del , BHELIX_VAR_pitch   ,  , nopr
*del , BHELIX_VAR_loops   ,  , nopr
*del , BHELIX_VAR_phi     ,  , nopr
*del , BHELIX_VAR_angstep ,  , nopr
*del , BHELIX_VAR_cmsuf   ,  , nopr
