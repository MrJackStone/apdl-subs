! arrinit , arrayNames , arrayType , arrayLengths
! ARRINIT , ARG1       , ARG2       , ARG3

! Description:
! Initializes arrays (*del, *dim). If ARG3 is scalar, all arrays are given the same length; if it
! is an array, each array name is given its corresponding size. All arrays must be of the same
! type, as defined by ARG2.

! Arguments:
! ARG1: arrayNames    -  names of arrays to initialize
! ARG2: arrayType     -  type to be assigned to all arrays (defaults to 'ARRAY')
! ARG3: arrayLengths  -  length to be assigned to each array (array or scalar)

! Local parameters:
! ar20: parType
! ar21: arrayCount
! ar22: nthArr
! ar23: arrName
! ar24: arrLength
! ar32: arrType


! Initialize array params
*del , ARRINIT_ARR_names   ,  , nopr
*del , ARRINIT_ARR_lengths ,  , nopr
*del , ARRINIT_ARR_types   ,  , nopr

! Check array names input param
*get,ar20,parm,ARG1,type
*if,ar20,eq,3,then
  ! Is a string
  *get,ar20,parm,%ARG1%,type
  *if,ar20,eq,5,then
    *get,ar21,parm,%ARG1%,dim,y
    *dim,ARRINIT_ARR_names,string,248,ar21
    *do,ar22,1,ar21,1
      ARRINIT_ARR_names(1,ar22) = %ARG1%(1,ar22)
    *enddo
  *else
    ar21 = 1
    *dim,ARRINIT_ARR_names,string,248,ar21
    ARRINIT_ARR_names(1,1) = ARG1
  *endif
*else
  *msg,warn,
ARRINIT error: ARG1 must be a string representing an array name or the name of a string array.%/&
ARRINIT command ignored.
  *return,-1
*endif

! Check array type
ar32 = 'ARRAY'
*get,ar20,parm,ARG2,type
*if,ar20,eq,3,then
  ar32 = ARG2
*endif

! Check array lengths input param
*get,ar20,parm,ARG3,type
*if,ar20,eq,3,then
  ! Is a string
  *get,ar20,parm,%ARG3%,type
  *if,ar20,eq,1,then
    ! Is an array
    *get,ar22,parm,%ARG3%,dim,x
    *if,ar22,ne,ar21,then
      *msg,warn
ARRINIT error: when ARG3 is the name of an array, this array must be the same size of ARG1.%/&
ARRINIT command ignored.
      *return,-1
    *endif
    *dim,ARRINIT_ARR_lengths,,ar21
    *do,ar22,1,ar21,1
      ARRINIT_ARR_lengths(ar22) = %ARG3%(ar22)
    *enddo
  *endif
*elseif,ar20,eq,0,then
  ! Is a number
  *if,ARG3,eq,0,then
    *msg,warn
ARRINIT error: zero array length is invalid (ARG3=0).%/&
ARRINIT command ignored.
    *return,-1
  *endif
  *dim,ARRINIT_ARR_lengths,,ar21
  *do,ar22,1,ar21,1
    ARRINIT_ARR_lengths(ar22)=ARG3
  *enddo
*else
  *msg,warn
ARRINIT error: ARG1 must be either the name of an array (string) or a number.%/&
ARRINIT command ignored.
  *return,-1
*endif

! Initialize arrays
*do,ar22,1,ar21,1
  ar23 = ARRINIT_ARR_names(1,ar22)
  ar24 = ARRINIT_ARR_lengths(ar22)
  *del,%ar23%,,nopr
  *dim,%ar23%,ar32,ar24
*enddo
