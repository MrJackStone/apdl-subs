! PLTESYS , csNum , plotCommand , moveOrigin , eselColor , csOutput
! PLTESYS , ARG1  , ARG2        , ARG3       , ARG4      , ARG5

! Description:
! Performs a plotting operation (defaults to EPLOT) after changing the display coordinate system
! (DSYS) to one provided directly (through ARG1) or to the first ESYS extracted from the current
! element selection. Despte the DSYS change, the effective view perspective remains unchanged.
! This macro is recommended to plot (using ANSYS's native /TRIAD symbol) the orientation of the
! local coordinate system (ESYS) of a selection of elements. For this to work it is necessary that
! /TRIAG,ORIG be set before calling this macro. This macro can also be combined with /NOERASE and
! GO2PNG/ENDPNG to create composite plots.

! Arguments:
! ARG1: csNum        -  number of coordinate system to set as display CS. If set to 0, a
!                       coordinate system will be obtained from the current element selecion.
! ARG2: plotCommand  -  plot command to be executed after changing the display coordinate system
!                       (defaults to 'EPLOT')
! ARG3: moveOrigin   -  option to move the origin of the chosen display CS:
!                         [0] Off (CS origin is kept at its original location)
!                         [1] On (CS origin is moved to the center of the selection bounding box)
! ARG4: eselColor    -  color (index 1 through 16) to assign to selected element set. Numbers 1
!                       through 15 are the same as described in the /COLOR command and number 16
!                       loops over and is converted to 0 (BLAC, by default). Element coloring is
!                       achieved by creating and coloring a temporary element selection component,
!                       therefore this functionality works only if the plot command is EPLOT.
!                       (Defaults to no color assignment)
! ARG5: csOutput     -  name of parameter to which the number of the activated CS will be assigned
!                       (defaults to 'PLTESYS_VAR_csOutput')

! Local parameters:
! ar20: parType
! ar21: displayCS
! ar22: plotCmd
! ar23: esysCount
! ar24: xCenter
! ar25: yCenter
! ar26: zCenter
! ar27: csOutputParmName
! ar28: actualCS
! ar29: applyCMcolor
! ar30: colorIndex
! ar31: COMPE_temp

! Global erased parameters:
! PLTESYS_ARR_esel_status
! PLTESYS_ARR_all_esys
! PLTESYS_ARR_sel_esys
! PLTESYS_ARR_uniq_esys
! PLTESYS_VAR_xmin
! PLTESYS_VAR_xmax
! PLTESYS_VAR_ymin
! PLTESYS_VAR_ymax
! PLTESYS_VAR_zmin
! PLTESYS_VAR_zmax
! PLTESYS_VAR_cs

! Global output parameters:
! %ARG5% (defaults to PLTESYS_VAR_csOutput)


! Parse inputs
ar22 = 'EPLOT'
*get,ar20,parm,ARG2,type
*if,ar20,eq,3,then
  ar22 = ARG2
*endif

ar27 = 'PLTESYS_VAR_csOutput'
*get,ar20,parm,ARG5,type
*if,ar20,eq,3,then
  ar27 = ARG5
*endif

ar29 = 0
*get,ar20,parm,ARG4,type
*if,ar20,eq,0,then
  *if,ARG4,gt,0,then
    ar29 = 1
    ar30 = mod(ARG4,16)
  *endif
*endif

! Prepare environment
dsbackup
csbackup
nbackup

*del , PLTESYS_ARR_esel_status ,  , nopr
*del , PLTESYS_ARR_all_esys    ,  , nopr
*del , PLTESYS_ARR_sel_esys    ,  , nopr
*del , PLTESYS_ARR_uniq_esys   ,  , nopr
*del , PLTESYS_VAR_xmin        ,  , nopr
*del , PLTESYS_VAR_xmax        ,  , nopr
*del , PLTESYS_VAR_ymin        ,  , nopr
*del , PLTESYS_VAR_ymax        ,  , nopr
*del , PLTESYS_VAR_zmin        ,  , nopr
*del , PLTESYS_VAR_zmax        ,  , nopr
*del , PLTESYS_VAR_cs          ,  , nopr
PLTESYS_VAR_cs = 0

! Get number of coordinate system to plot
%ar27% = ARG1

*if,ARG1,le,0,then
  *vget , PLTESYS_ARR_esel_status , elem ,  , esel
  *vget , PLTESYS_ARR_all_esys    , elem ,  , attr , 'ESYS'
  *vmask , PLTESYS_ARR_esel_status
  *vfun  , PLTESYS_ARR_sel_esys    , comp , PLTESYS_ARR_all_esys

  arruniq,'PLTESYS_ARR_sel_esys','PLTESYS_ARR_uniq_esys',1
  *get,ar23,parm,PLTESYS_ARR_uniq_esys,dim,x
  %ar27% = PLTESYS_ARR_uniq_esys(1)

  *if,ar23,gt,1,then
    *msg,warn,ar23,%ar27%
PLTESYS WARNING: selected element set contains %I different ESYS.%/&
Only the first ESYS (number %I) will be plotted.
  *endif
*endif

ar28 = %ar27%

! Move CSYS to bounding box virtual center
*if,ARG3,eq,1,then
  csys , %ar27%

  nsle,s,1
  ndbbox , 'PLTESYS_VAR_xmin' , 'PLTESYS_VAR_xmax' , 'PLTESYS_VAR_ymin' , 'PLTESYS_VAR_ymax' , 'PLTESYS_VAR_zmin' , 'PLTESYS_VAR_zmax' ,
  ar24 = (PLTESYS_VAR_xmin+PLTESYS_VAR_xmax)/2
  ar25 = (PLTESYS_VAR_ymin+PLTESYS_VAR_ymax)/2
  ar26 = (PLTESYS_VAR_zmin+PLTESYS_VAR_zmax)/2

  csnext , 'PLTESYS_VAR_cs'
  clocal , PLTESYS_VAR_cs , cart , ar24 , ar25 , ar26

  ar28 = PLTESYS_VAR_cs
*endif

! Apply element color
*if,ar29,eq,1,then
  cm,ar31,elem
  /color,cm,ar30,ar31
*endif

! Plot using changed display coordinate system
nsys , ar28
%ar22%

! Clean up
dsrestore
csrestore
nrestore

*if,PLTESYS_VAR_cs,ne,0,then
  csdele , PLTESYS_VAR_cs
*endif

*if,ar29,eq,1,then
  cmdele,ar31
*endif

*del , PLTESYS_ARR_esel_status ,  , nopr
*del , PLTESYS_ARR_all_esys    ,  , nopr
*del , PLTESYS_ARR_sel_esys    ,  , nopr
*del , PLTESYS_ARR_uniq_esys   ,  , nopr
*del , PLTESYS_VAR_xmin        ,  , nopr
*del , PLTESYS_VAR_xmax        ,  , nopr
*del , PLTESYS_VAR_ymin        ,  , nopr
*del , PLTESYS_VAR_ymax        ,  , nopr
*del , PLTESYS_VAR_zmin        ,  , nopr
*del , PLTESYS_VAR_zmax        ,  , nopr
*del , PLTESYS_VAR_cs          ,  , nopr
