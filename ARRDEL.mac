! arrdel , from , removed
! ARRDEL , ARG1 , ARG2

! Description:
! Deletes from the first array values present the second array (NOT operator).

! Arguments:
! ARG1: from     -  name of array from which values will be kept or deleted
! ARG2: removed  -  name of array containing values to remove

! Local parameters:
! ar21: fromLength
! ar22: excludedLength
! ar23: nthPos
! ar24: excludedValue

! Global cleared parameters:
! ARRDEL_ARR_invMask
! ARRDEL_ARR_mask
! ARRDEL_ARR_temp
! ARRDEL_ARR_check


! Prepare environment
*del , ARRDEL_ARR_invMask ,  , nopr
*del , ARRDEL_ARR_mask    ,  , nopr
*del , ARRDEL_ARR_temp    ,  , nopr

! Initialize arrays
*get,ar21,parm,%ARG1%,dim,x
*get,ar22,parm,%ARG2%,dim,x
*dim , ARRDEL_ARR_invMask ,  , ar21
*dim , ARRDEL_ARR_temp    ,  , ar21

! Back up values
*vfun,ARRDEL_ARR_temp,copy,%ARG1%

! Create masking array marking matching values
*do,ar23,1,ar22,1
  ar24 = %ARG2%(ar23)
  *del,ARRDEL_ARR_check,,nopr
  *voper , ARRDEL_ARR_check   , %ARG1%             , eq  , ar24
  *voper , ARRDEL_ARR_invMask , ARRDEL_ARR_invMask , add , ARRDEL_ARR_check
*enddo
*vfun,ARRDEL_ARR_mask,not,ARRDEL_ARR_invMask

! Compress original array
*del,%ARG1%,,nopr
*vmask,ARRDEL_ARR_mask
*vfun,%ARG1%,comp,ARRDEL_ARR_temp

! Clean up
*del , ARRDEL_ARR_temp    ,  , nopr
*del , ARRDEL_ARR_invMask ,  , nopr
*del , ARRDEL_ARR_check   ,  , nopr
*del , ARRDEL_ARR_mask    ,  , nopr
